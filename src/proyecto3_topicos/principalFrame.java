/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto3_topicos;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.CellType;
import java.util.Iterator;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.apache.poi.ss.usermodel.Cell;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author AJMM
 */
public class principalFrame extends javax.swing.JFrame {

    /**
     * Creates new form principalFrame
     */
    public principalFrame() {
        initComponents();
        panelMovible p = new panelMovible(300,300);
        p.setVisible(true);
        p.setBackground(Color.green);
        
        panelMovible p2 = new panelMovible(300,300);
        p2.setVisible(true);
        p2.setBackground(Color.blue);
        
        //cambiar los componentes
        this.graficasPane.setBackground(Color.red);
        //this.graficasPane.setLayout(new DragLayout());
        this.graficasPane.setLayout(new GridBagLayout());
        
        //añadir los componentes
        this.graficasPane.add(p);
        this.graficasPane.add(p2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graficasScrollPane = new javax.swing.JScrollPane();
        graficasPane = new javax.swing.JPanel();
        imprimirAPDFBoton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        crearBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        graficasScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout graficasPaneLayout = new javax.swing.GroupLayout(graficasPane);
        graficasPane.setLayout(graficasPaneLayout);
        graficasPaneLayout.setHorizontalGroup(
            graficasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 844, Short.MAX_VALUE)
        );
        graficasPaneLayout.setVerticalGroup(
            graficasPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );

        graficasScrollPane.setViewportView(graficasPane);

        imprimirAPDFBoton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        imprimirAPDFBoton.setText("IMPRIMIR A PDF");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gráfica de telaraña", "Item 2", "Item 3", "Item 4" }));

        crearBoton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        crearBoton.setText("CREAR:");
        crearBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graficasScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(imprimirAPDFBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(crearBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 572, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crearBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGap(25, 25, 25)
                .addComponent(graficasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imprimirAPDFBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearBotonActionPerformed
        // TODO add your handling code here:
        graficarWeb(this.graficasPane,"C:\\Users\\AJMM\\Desktop\\escuela\\Tec laguna\\4to semestre\\topicos avanzados\\unidad 3\\proyecto\\datos_grafica.xlsx");
        
        this.graficasPane.revalidate();
        System.out.println("AAAAAAAAAAA");
    }//GEN-LAST:event_crearBotonActionPerformed

    public void graficarWeb(JPanel panelDondeGraficar, String documento){
        int indiceDeColumnaDeEjes = 0;
        int indiceDeRenglonDeSeries = 0;
        
        //creo las estructuras de datos que necesitaré
        ArrayList<String> ejes = new ArrayList<>();
        Map<String,ArrayList<Integer>> seriesYValores = new HashMap<>();
        
        //conseguir los datos    
        System.out.println("RAAAAAAAAAAa");
        //si es xls, codigo conseguido de: https://howtodoinjava.com/java/library/readingwriting-excel-files-in-java-poi-tutorial/
        FileInputStream file = null;
        try {
            file = new FileInputStream(new File(documento));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(principalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("BBBBBBBBBBBBB");
        //Create Workbook instance holding reference to .xlsx file
        XSSFWorkbook workbook = null;
        try {
            workbook = new XSSFWorkbook(file);
        } catch (IOException ex) {
            Logger.getLogger(principalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("CCCCCCCCCCCC");
        //Get first/desired sheet from the workbook
        XSSFSheet sheet = workbook.getSheetAt(0);

        //Iterate through each rows one by one
        Iterator<Row> rowIterator = sheet.iterator();
        while (rowIterator.hasNext()) {
            System.out.println("DDDDDDDDDDd");
          Row row = rowIterator.next();

          //For each row, iterate through all the columns
          Iterator<Cell> cellIterator = row.cellIterator();

          while (cellIterator.hasNext()) {

            Cell cell = cellIterator.next();
            
            //Check the cell type and format accordingly
            switch (cell.getCellType()) {
              case NUMERIC:
                System.out.print(cell.getNumericCellValue() + "t");
                break;
              case STRING:
                System.out.print(cell.getStringCellValue() + "t");
                break;
            }
          }
          System.out.println("");
        }
        try {    
            file.close();
            //si es csv      
        } catch (IOException ex) {
            Logger.getLogger(principalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        //lleno el default category set
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for (Map.Entry<String, ArrayList<Integer>> parSerieValores : seriesYValores.entrySet()) {
            for(int i = 0; i < parSerieValores.getValue().size(); i++){
                dataset.addValue(parSerieValores.getValue().get(i), parSerieValores.getKey(), ejes.get(i));
            }
        }
        
        //crear el dataset
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        String series = "Score"; // Only one series in a radar chart
//        dataset.addValue(8, series, "Speed");
//        dataset.addValue(7, series, "Strength");
//        dataset.addValue(9, series, "Agility");
//        dataset.addValue(6, series, "Endurance");
//        dataset.addValue(8, series, "Flexibility");
//        
        //crear el plot
        SpiderWebPlot plot = new SpiderWebPlot(dataset);

        //crear la chart
        JFreeChart chart = new JFreeChart("Athlete Performance", JFreeChart.DEFAULT_TITLE_FONT, plot, false);

        //crear la chartPanel
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(300,300));
        chartPanel.addMouseMotionListener(new arrastrarMouseListener(chartPanel));
        
        panelDondeGraficar.add(chartPanel);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principalFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton crearBoton;
    private javax.swing.JPanel graficasPane;
    private javax.swing.JScrollPane graficasScrollPane;
    private javax.swing.JButton imprimirAPDFBoton;
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables
}
